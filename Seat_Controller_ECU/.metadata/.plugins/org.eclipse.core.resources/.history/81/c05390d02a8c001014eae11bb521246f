
MCU_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000069a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000007e0  00000000  00000000  000006f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007e3  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 46 03 	call	0x68c	; 0x68c <main>
  64:	0c 94 4b 03 	jmp	0x696	; 0x696 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_INIT>:




void DIO_INIT(u8 PORT_NAME, u8 PIN_NUM, u8 Mode)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_INIT+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_INIT+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
	switch(PORT_NAME)
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	82 30       	cpi	r24, 0x02	; 2
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <DIO_INIT+0x2a>
  94:	48 c0       	rjmp	.+144    	; 0x126 <DIO_INIT+0xba>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	23 30       	cpi	r18, 0x03	; 3
  9c:	31 05       	cpc	r19, r1
  9e:	34 f4       	brge	.+12     	; 0xac <DIO_INIT+0x40>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	71 f0       	breq	.+28     	; 0xc6 <DIO_INIT+0x5a>
  aa:	cb c0       	rjmp	.+406    	; 0x242 <DIO_INIT+0x1d6>
  ac:	2c 81       	ldd	r18, Y+4	; 0x04
  ae:	3d 81       	ldd	r19, Y+5	; 0x05
  b0:	23 30       	cpi	r18, 0x03	; 3
  b2:	31 05       	cpc	r19, r1
  b4:	09 f4       	brne	.+2      	; 0xb8 <DIO_INIT+0x4c>
  b6:	67 c0       	rjmp	.+206    	; 0x186 <DIO_INIT+0x11a>
  b8:	8c 81       	ldd	r24, Y+4	; 0x04
  ba:	9d 81       	ldd	r25, Y+5	; 0x05
  bc:	84 30       	cpi	r24, 0x04	; 4
  be:	91 05       	cpc	r25, r1
  c0:	09 f4       	brne	.+2      	; 0xc4 <DIO_INIT+0x58>
  c2:	91 c0       	rjmp	.+290    	; 0x1e6 <DIO_INIT+0x17a>
  c4:	be c0       	rjmp	.+380    	; 0x242 <DIO_INIT+0x1d6>
	{
	case DIO_PORTA:
		if(Mode == DIO_INPUT)
  c6:	8b 81       	ldd	r24, Y+3	; 0x03
  c8:	88 23       	and	r24, r24
  ca:	a9 f4       	brne	.+42     	; 0xf6 <DIO_INIT+0x8a>
		{
			CLR_BIT(DDRA, PIN_NUM);
  cc:	aa e3       	ldi	r26, 0x3A	; 58
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	ea e3       	ldi	r30, 0x3A	; 58
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	48 2f       	mov	r20, r24
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	28 2f       	mov	r18, r24
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 2e       	mov	r0, r18
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_INIT+0x7e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_INIT+0x7a>
  ee:	80 95       	com	r24
  f0:	84 23       	and	r24, r20
  f2:	8c 93       	st	X, r24
  f4:	a6 c0       	rjmp	.+332    	; 0x242 <DIO_INIT+0x1d6>
		}
		else if(Mode == DIO_OUTPUT)
  f6:	8b 81       	ldd	r24, Y+3	; 0x03
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	09 f0       	breq	.+2      	; 0xfe <DIO_INIT+0x92>
  fc:	a2 c0       	rjmp	.+324    	; 0x242 <DIO_INIT+0x1d6>
		{
			SET_BIT(DDRA, PIN_NUM);
  fe:	aa e3       	ldi	r26, 0x3A	; 58
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	ea e3       	ldi	r30, 0x3A	; 58
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	48 2f       	mov	r20, r24
 10a:	8a 81       	ldd	r24, Y+2	; 0x02
 10c:	28 2f       	mov	r18, r24
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 2e       	mov	r0, r18
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_INIT+0xb0>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	0a 94       	dec	r0
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_INIT+0xac>
 120:	84 2b       	or	r24, r20
 122:	8c 93       	st	X, r24
 124:	8e c0       	rjmp	.+284    	; 0x242 <DIO_INIT+0x1d6>
		}
		break;
	case DIO_PORTB:
		if( Mode == DIO_INPUT)
 126:	8b 81       	ldd	r24, Y+3	; 0x03
 128:	88 23       	and	r24, r24
 12a:	a9 f4       	brne	.+42     	; 0x156 <DIO_INIT+0xea>
		{
			CLR_BIT(DDRA, PIN_NUM);
 12c:	aa e3       	ldi	r26, 0x3A	; 58
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	ea e3       	ldi	r30, 0x3A	; 58
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_INIT+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_INIT+0xda>
 14e:	80 95       	com	r24
 150:	84 23       	and	r24, r20
 152:	8c 93       	st	X, r24
 154:	76 c0       	rjmp	.+236    	; 0x242 <DIO_INIT+0x1d6>
		}
		else if(Mode == DIO_OUTPUT)
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	09 f0       	breq	.+2      	; 0x15e <DIO_INIT+0xf2>
 15c:	72 c0       	rjmp	.+228    	; 0x242 <DIO_INIT+0x1d6>
		{
			SET_BIT(DDRA, PIN_NUM);
 15e:	aa e3       	ldi	r26, 0x3A	; 58
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	ea e3       	ldi	r30, 0x3A	; 58
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	48 2f       	mov	r20, r24
 16a:	8a 81       	ldd	r24, Y+2	; 0x02
 16c:	28 2f       	mov	r18, r24
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 2e       	mov	r0, r18
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_INIT+0x110>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	0a 94       	dec	r0
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_INIT+0x10c>
 180:	84 2b       	or	r24, r20
 182:	8c 93       	st	X, r24
 184:	5e c0       	rjmp	.+188    	; 0x242 <DIO_INIT+0x1d6>
		}
		break;
	case DIO_PORTC:
		if( Mode == DIO_INPUT)
 186:	8b 81       	ldd	r24, Y+3	; 0x03
 188:	88 23       	and	r24, r24
 18a:	a9 f4       	brne	.+42     	; 0x1b6 <DIO_INIT+0x14a>
		{
			CLR_BIT(DDRA, PIN_NUM);
 18c:	aa e3       	ldi	r26, 0x3A	; 58
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	ea e3       	ldi	r30, 0x3A	; 58
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	48 2f       	mov	r20, r24
 198:	8a 81       	ldd	r24, Y+2	; 0x02
 19a:	28 2f       	mov	r18, r24
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 2e       	mov	r0, r18
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_INIT+0x13e>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	0a 94       	dec	r0
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_INIT+0x13a>
 1ae:	80 95       	com	r24
 1b0:	84 23       	and	r24, r20
 1b2:	8c 93       	st	X, r24
 1b4:	46 c0       	rjmp	.+140    	; 0x242 <DIO_INIT+0x1d6>
		}
		else if(Mode == DIO_OUTPUT)
 1b6:	8b 81       	ldd	r24, Y+3	; 0x03
 1b8:	81 30       	cpi	r24, 0x01	; 1
 1ba:	09 f0       	breq	.+2      	; 0x1be <DIO_INIT+0x152>
 1bc:	42 c0       	rjmp	.+132    	; 0x242 <DIO_INIT+0x1d6>
		{
			SET_BIT(DDRA, PIN_NUM);
 1be:	aa e3       	ldi	r26, 0x3A	; 58
 1c0:	b0 e0       	ldi	r27, 0x00	; 0
 1c2:	ea e3       	ldi	r30, 0x3A	; 58
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	48 2f       	mov	r20, r24
 1ca:	8a 81       	ldd	r24, Y+2	; 0x02
 1cc:	28 2f       	mov	r18, r24
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 2e       	mov	r0, r18
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_INIT+0x170>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	0a 94       	dec	r0
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_INIT+0x16c>
 1e0:	84 2b       	or	r24, r20
 1e2:	8c 93       	st	X, r24
 1e4:	2e c0       	rjmp	.+92     	; 0x242 <DIO_INIT+0x1d6>
		}
		break;
	case DIO_PORTD:
		if( Mode == DIO_INPUT)
 1e6:	8b 81       	ldd	r24, Y+3	; 0x03
 1e8:	88 23       	and	r24, r24
 1ea:	a9 f4       	brne	.+42     	; 0x216 <DIO_INIT+0x1aa>
		{
			CLR_BIT(DDRA, PIN_NUM);
 1ec:	aa e3       	ldi	r26, 0x3A	; 58
 1ee:	b0 e0       	ldi	r27, 0x00	; 0
 1f0:	ea e3       	ldi	r30, 0x3A	; 58
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	48 2f       	mov	r20, r24
 1f8:	8a 81       	ldd	r24, Y+2	; 0x02
 1fa:	28 2f       	mov	r18, r24
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 2e       	mov	r0, r18
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_INIT+0x19e>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	0a 94       	dec	r0
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_INIT+0x19a>
 20e:	80 95       	com	r24
 210:	84 23       	and	r24, r20
 212:	8c 93       	st	X, r24
 214:	16 c0       	rjmp	.+44     	; 0x242 <DIO_INIT+0x1d6>
		}
		else if(Mode == DIO_OUTPUT)
 216:	8b 81       	ldd	r24, Y+3	; 0x03
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	99 f4       	brne	.+38     	; 0x242 <DIO_INIT+0x1d6>
		{
			SET_BIT(DDRA, PIN_NUM);
 21c:	aa e3       	ldi	r26, 0x3A	; 58
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	ea e3       	ldi	r30, 0x3A	; 58
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	48 2f       	mov	r20, r24
 228:	8a 81       	ldd	r24, Y+2	; 0x02
 22a:	28 2f       	mov	r18, r24
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 2e       	mov	r0, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_INIT+0x1ce>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_INIT+0x1ca>
 23e:	84 2b       	or	r24, r20
 240:	8c 93       	st	X, r24
		}
		break;
	}
}
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	cf 91       	pop	r28
 24e:	df 91       	pop	r29
 250:	08 95       	ret

00000252 <DIO_SET_PIN_DIR>:
void DIO_SET_PIN_DIR(u8 PORT_NAME, u8 PIN_NUM, u8 Value)
{
 252:	df 93       	push	r29
 254:	cf 93       	push	r28
 256:	00 d0       	rcall	.+0      	; 0x258 <DIO_SET_PIN_DIR+0x6>
 258:	00 d0       	rcall	.+0      	; 0x25a <DIO_SET_PIN_DIR+0x8>
 25a:	0f 92       	push	r0
 25c:	cd b7       	in	r28, 0x3d	; 61
 25e:	de b7       	in	r29, 0x3e	; 62
 260:	89 83       	std	Y+1, r24	; 0x01
 262:	6a 83       	std	Y+2, r22	; 0x02
 264:	4b 83       	std	Y+3, r20	; 0x03
	switch(PORT_NAME)
 266:	89 81       	ldd	r24, Y+1	; 0x01
 268:	28 2f       	mov	r18, r24
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	3d 83       	std	Y+5, r19	; 0x05
 26e:	2c 83       	std	Y+4, r18	; 0x04
 270:	8c 81       	ldd	r24, Y+4	; 0x04
 272:	9d 81       	ldd	r25, Y+5	; 0x05
 274:	82 30       	cpi	r24, 0x02	; 2
 276:	91 05       	cpc	r25, r1
 278:	09 f4       	brne	.+2      	; 0x27c <DIO_SET_PIN_DIR+0x2a>
 27a:	48 c0       	rjmp	.+144    	; 0x30c <DIO_SET_PIN_DIR+0xba>
 27c:	2c 81       	ldd	r18, Y+4	; 0x04
 27e:	3d 81       	ldd	r19, Y+5	; 0x05
 280:	23 30       	cpi	r18, 0x03	; 3
 282:	31 05       	cpc	r19, r1
 284:	34 f4       	brge	.+12     	; 0x292 <DIO_SET_PIN_DIR+0x40>
 286:	8c 81       	ldd	r24, Y+4	; 0x04
 288:	9d 81       	ldd	r25, Y+5	; 0x05
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	91 05       	cpc	r25, r1
 28e:	71 f0       	breq	.+28     	; 0x2ac <DIO_SET_PIN_DIR+0x5a>
 290:	cb c0       	rjmp	.+406    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
 292:	2c 81       	ldd	r18, Y+4	; 0x04
 294:	3d 81       	ldd	r19, Y+5	; 0x05
 296:	23 30       	cpi	r18, 0x03	; 3
 298:	31 05       	cpc	r19, r1
 29a:	09 f4       	brne	.+2      	; 0x29e <DIO_SET_PIN_DIR+0x4c>
 29c:	67 c0       	rjmp	.+206    	; 0x36c <DIO_SET_PIN_DIR+0x11a>
 29e:	8c 81       	ldd	r24, Y+4	; 0x04
 2a0:	9d 81       	ldd	r25, Y+5	; 0x05
 2a2:	84 30       	cpi	r24, 0x04	; 4
 2a4:	91 05       	cpc	r25, r1
 2a6:	09 f4       	brne	.+2      	; 0x2aa <DIO_SET_PIN_DIR+0x58>
 2a8:	91 c0       	rjmp	.+290    	; 0x3cc <DIO_SET_PIN_DIR+0x17a>
 2aa:	be c0       	rjmp	.+380    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
	{
	case DIO_PORTA:
		if(Value == DIO_LOW)
 2ac:	8b 81       	ldd	r24, Y+3	; 0x03
 2ae:	88 23       	and	r24, r24
 2b0:	a9 f4       	brne	.+42     	; 0x2dc <DIO_SET_PIN_DIR+0x8a>
		{
			CLR_BIT(PORTA, PIN_NUM);
 2b2:	ab e3       	ldi	r26, 0x3B	; 59
 2b4:	b0 e0       	ldi	r27, 0x00	; 0
 2b6:	eb e3       	ldi	r30, 0x3B	; 59
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	80 81       	ld	r24, Z
 2bc:	48 2f       	mov	r20, r24
 2be:	8a 81       	ldd	r24, Y+2	; 0x02
 2c0:	28 2f       	mov	r18, r24
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 2e       	mov	r0, r18
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <DIO_SET_PIN_DIR+0x7e>
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	0a 94       	dec	r0
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <DIO_SET_PIN_DIR+0x7a>
 2d4:	80 95       	com	r24
 2d6:	84 23       	and	r24, r20
 2d8:	8c 93       	st	X, r24
 2da:	a6 c0       	rjmp	.+332    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		else if(Value == DIO_HIGH)
 2dc:	8b 81       	ldd	r24, Y+3	; 0x03
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	09 f0       	breq	.+2      	; 0x2e4 <DIO_SET_PIN_DIR+0x92>
 2e2:	a2 c0       	rjmp	.+324    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		{
			SET_BIT(PORTA, PIN_NUM);
 2e4:	ab e3       	ldi	r26, 0x3B	; 59
 2e6:	b0 e0       	ldi	r27, 0x00	; 0
 2e8:	eb e3       	ldi	r30, 0x3B	; 59
 2ea:	f0 e0       	ldi	r31, 0x00	; 0
 2ec:	80 81       	ld	r24, Z
 2ee:	48 2f       	mov	r20, r24
 2f0:	8a 81       	ldd	r24, Y+2	; 0x02
 2f2:	28 2f       	mov	r18, r24
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	02 2e       	mov	r0, r18
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_SET_PIN_DIR+0xb0>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	0a 94       	dec	r0
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_SET_PIN_DIR+0xac>
 306:	84 2b       	or	r24, r20
 308:	8c 93       	st	X, r24
 30a:	8e c0       	rjmp	.+284    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		break;
	case DIO_PORTB:
		if(Value == DIO_LOW)
 30c:	8b 81       	ldd	r24, Y+3	; 0x03
 30e:	88 23       	and	r24, r24
 310:	a9 f4       	brne	.+42     	; 0x33c <DIO_SET_PIN_DIR+0xea>
		{
			CLR_BIT(PORTB, PIN_NUM);
 312:	a8 e3       	ldi	r26, 0x38	; 56
 314:	b0 e0       	ldi	r27, 0x00	; 0
 316:	e8 e3       	ldi	r30, 0x38	; 56
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	80 81       	ld	r24, Z
 31c:	48 2f       	mov	r20, r24
 31e:	8a 81       	ldd	r24, Y+2	; 0x02
 320:	28 2f       	mov	r18, r24
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	02 2e       	mov	r0, r18
 32a:	02 c0       	rjmp	.+4      	; 0x330 <DIO_SET_PIN_DIR+0xde>
 32c:	88 0f       	add	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	0a 94       	dec	r0
 332:	e2 f7       	brpl	.-8      	; 0x32c <DIO_SET_PIN_DIR+0xda>
 334:	80 95       	com	r24
 336:	84 23       	and	r24, r20
 338:	8c 93       	st	X, r24
 33a:	76 c0       	rjmp	.+236    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		else if(Value == DIO_HIGH)
 33c:	8b 81       	ldd	r24, Y+3	; 0x03
 33e:	81 30       	cpi	r24, 0x01	; 1
 340:	09 f0       	breq	.+2      	; 0x344 <DIO_SET_PIN_DIR+0xf2>
 342:	72 c0       	rjmp	.+228    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		{
			SET_BIT(PORTB, PIN_NUM);
 344:	a8 e3       	ldi	r26, 0x38	; 56
 346:	b0 e0       	ldi	r27, 0x00	; 0
 348:	e8 e3       	ldi	r30, 0x38	; 56
 34a:	f0 e0       	ldi	r31, 0x00	; 0
 34c:	80 81       	ld	r24, Z
 34e:	48 2f       	mov	r20, r24
 350:	8a 81       	ldd	r24, Y+2	; 0x02
 352:	28 2f       	mov	r18, r24
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	02 2e       	mov	r0, r18
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_SET_PIN_DIR+0x110>
 35e:	88 0f       	add	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	0a 94       	dec	r0
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_SET_PIN_DIR+0x10c>
 366:	84 2b       	or	r24, r20
 368:	8c 93       	st	X, r24
 36a:	5e c0       	rjmp	.+188    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		break;
	case DIO_PORTC:
		if(Value == DIO_LOW)
 36c:	8b 81       	ldd	r24, Y+3	; 0x03
 36e:	88 23       	and	r24, r24
 370:	a9 f4       	brne	.+42     	; 0x39c <DIO_SET_PIN_DIR+0x14a>
		{
			CLR_BIT(PORTC, PIN_NUM);
 372:	a5 e3       	ldi	r26, 0x35	; 53
 374:	b0 e0       	ldi	r27, 0x00	; 0
 376:	e5 e3       	ldi	r30, 0x35	; 53
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	48 2f       	mov	r20, r24
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
 380:	28 2f       	mov	r18, r24
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	02 2e       	mov	r0, r18
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_SET_PIN_DIR+0x13e>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_SET_PIN_DIR+0x13a>
 394:	80 95       	com	r24
 396:	84 23       	and	r24, r20
 398:	8c 93       	st	X, r24
 39a:	46 c0       	rjmp	.+140    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		else if(Value == DIO_HIGH)
 39c:	8b 81       	ldd	r24, Y+3	; 0x03
 39e:	81 30       	cpi	r24, 0x01	; 1
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <DIO_SET_PIN_DIR+0x152>
 3a2:	42 c0       	rjmp	.+132    	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		{
			SET_BIT(PORTC, PIN_NUM);
 3a4:	a5 e3       	ldi	r26, 0x35	; 53
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	e5 e3       	ldi	r30, 0x35	; 53
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	48 2f       	mov	r20, r24
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	28 2f       	mov	r18, r24
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 2e       	mov	r0, r18
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_SET_PIN_DIR+0x170>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	0a 94       	dec	r0
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_SET_PIN_DIR+0x16c>
 3c6:	84 2b       	or	r24, r20
 3c8:	8c 93       	st	X, r24
 3ca:	2e c0       	rjmp	.+92     	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		break;
	case DIO_PORTD:
		if(Value == DIO_LOW)
 3cc:	8b 81       	ldd	r24, Y+3	; 0x03
 3ce:	88 23       	and	r24, r24
 3d0:	a9 f4       	brne	.+42     	; 0x3fc <DIO_SET_PIN_DIR+0x1aa>
		{
			CLR_BIT(PORTD, PIN_NUM);
 3d2:	a2 e3       	ldi	r26, 0x32	; 50
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	e2 e3       	ldi	r30, 0x32	; 50
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	80 81       	ld	r24, Z
 3dc:	48 2f       	mov	r20, r24
 3de:	8a 81       	ldd	r24, Y+2	; 0x02
 3e0:	28 2f       	mov	r18, r24
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	02 2e       	mov	r0, r18
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <DIO_SET_PIN_DIR+0x19e>
 3ec:	88 0f       	add	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	0a 94       	dec	r0
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <DIO_SET_PIN_DIR+0x19a>
 3f4:	80 95       	com	r24
 3f6:	84 23       	and	r24, r20
 3f8:	8c 93       	st	X, r24
 3fa:	16 c0       	rjmp	.+44     	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		}
		else if(Value == DIO_HIGH)
 3fc:	8b 81       	ldd	r24, Y+3	; 0x03
 3fe:	81 30       	cpi	r24, 0x01	; 1
 400:	99 f4       	brne	.+38     	; 0x428 <DIO_SET_PIN_DIR+0x1d6>
		{
			SET_BIT(PORTD, PIN_NUM);
 402:	a2 e3       	ldi	r26, 0x32	; 50
 404:	b0 e0       	ldi	r27, 0x00	; 0
 406:	e2 e3       	ldi	r30, 0x32	; 50
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	80 81       	ld	r24, Z
 40c:	48 2f       	mov	r20, r24
 40e:	8a 81       	ldd	r24, Y+2	; 0x02
 410:	28 2f       	mov	r18, r24
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	02 2e       	mov	r0, r18
 41a:	02 c0       	rjmp	.+4      	; 0x420 <DIO_SET_PIN_DIR+0x1ce>
 41c:	88 0f       	add	r24, r24
 41e:	99 1f       	adc	r25, r25
 420:	0a 94       	dec	r0
 422:	e2 f7       	brpl	.-8      	; 0x41c <DIO_SET_PIN_DIR+0x1ca>
 424:	84 2b       	or	r24, r20
 426:	8c 93       	st	X, r24
		}
		break;
	}
}
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	0f 90       	pop	r0
 430:	0f 90       	pop	r0
 432:	cf 91       	pop	r28
 434:	df 91       	pop	r29
 436:	08 95       	ret

00000438 <DIO_TOG_PIN>:
void DIO_TOG_PIN(u8 PORT_NAME, u8 PIN_NUM)
{
 438:	df 93       	push	r29
 43a:	cf 93       	push	r28
 43c:	00 d0       	rcall	.+0      	; 0x43e <DIO_TOG_PIN+0x6>
 43e:	00 d0       	rcall	.+0      	; 0x440 <DIO_TOG_PIN+0x8>
 440:	cd b7       	in	r28, 0x3d	; 61
 442:	de b7       	in	r29, 0x3e	; 62
 444:	89 83       	std	Y+1, r24	; 0x01
 446:	6a 83       	std	Y+2, r22	; 0x02
	switch(PORT_NAME)
 448:	89 81       	ldd	r24, Y+1	; 0x01
 44a:	28 2f       	mov	r18, r24
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	3c 83       	std	Y+4, r19	; 0x04
 450:	2b 83       	std	Y+3, r18	; 0x03
 452:	8b 81       	ldd	r24, Y+3	; 0x03
 454:	9c 81       	ldd	r25, Y+4	; 0x04
 456:	82 30       	cpi	r24, 0x02	; 2
 458:	91 05       	cpc	r25, r1
 45a:	51 f1       	breq	.+84     	; 0x4b0 <__stack+0x51>
 45c:	2b 81       	ldd	r18, Y+3	; 0x03
 45e:	3c 81       	ldd	r19, Y+4	; 0x04
 460:	23 30       	cpi	r18, 0x03	; 3
 462:	31 05       	cpc	r19, r1
 464:	34 f4       	brge	.+12     	; 0x472 <__stack+0x13>
 466:	8b 81       	ldd	r24, Y+3	; 0x03
 468:	9c 81       	ldd	r25, Y+4	; 0x04
 46a:	81 30       	cpi	r24, 0x01	; 1
 46c:	91 05       	cpc	r25, r1
 46e:	61 f0       	breq	.+24     	; 0x488 <__stack+0x29>
 470:	5a c0       	rjmp	.+180    	; 0x526 <__stack+0xc7>
 472:	2b 81       	ldd	r18, Y+3	; 0x03
 474:	3c 81       	ldd	r19, Y+4	; 0x04
 476:	23 30       	cpi	r18, 0x03	; 3
 478:	31 05       	cpc	r19, r1
 47a:	71 f1       	breq	.+92     	; 0x4d8 <__stack+0x79>
 47c:	8b 81       	ldd	r24, Y+3	; 0x03
 47e:	9c 81       	ldd	r25, Y+4	; 0x04
 480:	84 30       	cpi	r24, 0x04	; 4
 482:	91 05       	cpc	r25, r1
 484:	e9 f1       	breq	.+122    	; 0x500 <__stack+0xa1>
 486:	4f c0       	rjmp	.+158    	; 0x526 <__stack+0xc7>
	{
	case DIO_PORTA:
		TOG_BIT(PORTA, PIN_NUM);
 488:	ab e3       	ldi	r26, 0x3B	; 59
 48a:	b0 e0       	ldi	r27, 0x00	; 0
 48c:	eb e3       	ldi	r30, 0x3B	; 59
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	80 81       	ld	r24, Z
 492:	48 2f       	mov	r20, r24
 494:	8a 81       	ldd	r24, Y+2	; 0x02
 496:	28 2f       	mov	r18, r24
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 2e       	mov	r0, r18
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__stack+0x47>
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	0a 94       	dec	r0
 4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <__stack+0x43>
 4aa:	84 27       	eor	r24, r20
 4ac:	8c 93       	st	X, r24
 4ae:	3b c0       	rjmp	.+118    	; 0x526 <__stack+0xc7>
		break;
	case DIO_PORTB:
		TOG_BIT(PORTB, PIN_NUM);
 4b0:	a8 e3       	ldi	r26, 0x38	; 56
 4b2:	b0 e0       	ldi	r27, 0x00	; 0
 4b4:	e8 e3       	ldi	r30, 0x38	; 56
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	80 81       	ld	r24, Z
 4ba:	48 2f       	mov	r20, r24
 4bc:	8a 81       	ldd	r24, Y+2	; 0x02
 4be:	28 2f       	mov	r18, r24
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	02 2e       	mov	r0, r18
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <__stack+0x6f>
 4ca:	88 0f       	add	r24, r24
 4cc:	99 1f       	adc	r25, r25
 4ce:	0a 94       	dec	r0
 4d0:	e2 f7       	brpl	.-8      	; 0x4ca <__stack+0x6b>
 4d2:	84 27       	eor	r24, r20
 4d4:	8c 93       	st	X, r24
 4d6:	27 c0       	rjmp	.+78     	; 0x526 <__stack+0xc7>
		break;
	case DIO_PORTC:
		TOG_BIT(PORTC, PIN_NUM);
 4d8:	a5 e3       	ldi	r26, 0x35	; 53
 4da:	b0 e0       	ldi	r27, 0x00	; 0
 4dc:	e5 e3       	ldi	r30, 0x35	; 53
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	80 81       	ld	r24, Z
 4e2:	48 2f       	mov	r20, r24
 4e4:	8a 81       	ldd	r24, Y+2	; 0x02
 4e6:	28 2f       	mov	r18, r24
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	02 2e       	mov	r0, r18
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <__stack+0x97>
 4f2:	88 0f       	add	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	0a 94       	dec	r0
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <__stack+0x93>
 4fa:	84 27       	eor	r24, r20
 4fc:	8c 93       	st	X, r24
 4fe:	13 c0       	rjmp	.+38     	; 0x526 <__stack+0xc7>
		break;
	case DIO_PORTD:
		TOG_BIT(PORTD, PIN_NUM);
 500:	a2 e3       	ldi	r26, 0x32	; 50
 502:	b0 e0       	ldi	r27, 0x00	; 0
 504:	e2 e3       	ldi	r30, 0x32	; 50
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 81       	ld	r24, Z
 50a:	48 2f       	mov	r20, r24
 50c:	8a 81       	ldd	r24, Y+2	; 0x02
 50e:	28 2f       	mov	r18, r24
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	02 2e       	mov	r0, r18
 518:	02 c0       	rjmp	.+4      	; 0x51e <__stack+0xbf>
 51a:	88 0f       	add	r24, r24
 51c:	99 1f       	adc	r25, r25
 51e:	0a 94       	dec	r0
 520:	e2 f7       	brpl	.-8      	; 0x51a <__stack+0xbb>
 522:	84 27       	eor	r24, r20
 524:	8c 93       	st	X, r24
		break;
	}
}
 526:	0f 90       	pop	r0
 528:	0f 90       	pop	r0
 52a:	0f 90       	pop	r0
 52c:	0f 90       	pop	r0
 52e:	cf 91       	pop	r28
 530:	df 91       	pop	r29
 532:	08 95       	ret

00000534 <DIO_READ_PIN>:
u8 DIO_READ_PIN(u8 PORT_NAME, u8 PIN_NUM)
{
 534:	df 93       	push	r29
 536:	cf 93       	push	r28
 538:	00 d0       	rcall	.+0      	; 0x53a <DIO_READ_PIN+0x6>
 53a:	00 d0       	rcall	.+0      	; 0x53c <DIO_READ_PIN+0x8>
 53c:	0f 92       	push	r0
 53e:	cd b7       	in	r28, 0x3d	; 61
 540:	de b7       	in	r29, 0x3e	; 62
 542:	8a 83       	std	Y+2, r24	; 0x02
 544:	6b 83       	std	Y+3, r22	; 0x03
	u8 RET_VAL = 0;
 546:	19 82       	std	Y+1, r1	; 0x01
	switch(PORT_NAME)
 548:	8a 81       	ldd	r24, Y+2	; 0x02
 54a:	28 2f       	mov	r18, r24
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	3d 83       	std	Y+5, r19	; 0x05
 550:	2c 83       	std	Y+4, r18	; 0x04
 552:	4c 81       	ldd	r20, Y+4	; 0x04
 554:	5d 81       	ldd	r21, Y+5	; 0x05
 556:	42 30       	cpi	r20, 0x02	; 2
 558:	51 05       	cpc	r21, r1
 55a:	b1 f1       	breq	.+108    	; 0x5c8 <DIO_READ_PIN+0x94>
 55c:	8c 81       	ldd	r24, Y+4	; 0x04
 55e:	9d 81       	ldd	r25, Y+5	; 0x05
 560:	83 30       	cpi	r24, 0x03	; 3
 562:	91 05       	cpc	r25, r1
 564:	34 f4       	brge	.+12     	; 0x572 <DIO_READ_PIN+0x3e>
 566:	2c 81       	ldd	r18, Y+4	; 0x04
 568:	3d 81       	ldd	r19, Y+5	; 0x05
 56a:	21 30       	cpi	r18, 0x01	; 1
 56c:	31 05       	cpc	r19, r1
 56e:	71 f0       	breq	.+28     	; 0x58c <DIO_READ_PIN+0x58>
 570:	84 c0       	rjmp	.+264    	; 0x67a <DIO_READ_PIN+0x146>
 572:	4c 81       	ldd	r20, Y+4	; 0x04
 574:	5d 81       	ldd	r21, Y+5	; 0x05
 576:	43 30       	cpi	r20, 0x03	; 3
 578:	51 05       	cpc	r21, r1
 57a:	09 f4       	brne	.+2      	; 0x57e <DIO_READ_PIN+0x4a>
 57c:	43 c0       	rjmp	.+134    	; 0x604 <DIO_READ_PIN+0xd0>
 57e:	8c 81       	ldd	r24, Y+4	; 0x04
 580:	9d 81       	ldd	r25, Y+5	; 0x05
 582:	84 30       	cpi	r24, 0x04	; 4
 584:	91 05       	cpc	r25, r1
 586:	09 f4       	brne	.+2      	; 0x58a <DIO_READ_PIN+0x56>
 588:	5b c0       	rjmp	.+182    	; 0x640 <DIO_READ_PIN+0x10c>
 58a:	77 c0       	rjmp	.+238    	; 0x67a <DIO_READ_PIN+0x146>
	{
	case DIO_PORTA:
		RET_VAL = READ_BIT(PINA, PIN_NUM);
 58c:	e9 e3       	ldi	r30, 0x39	; 57
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	80 81       	ld	r24, Z
 592:	48 2f       	mov	r20, r24
 594:	50 e0       	ldi	r21, 0x00	; 0
 596:	8b 81       	ldd	r24, Y+3	; 0x03
 598:	28 2f       	mov	r18, r24
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <DIO_READ_PIN+0x72>
 5a2:	88 0f       	add	r24, r24
 5a4:	99 1f       	adc	r25, r25
 5a6:	2a 95       	dec	r18
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <DIO_READ_PIN+0x6e>
 5aa:	9a 01       	movw	r18, r20
 5ac:	28 23       	and	r18, r24
 5ae:	39 23       	and	r19, r25
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	88 2f       	mov	r24, r24
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	a9 01       	movw	r20, r18
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <DIO_READ_PIN+0x8a>
 5ba:	55 95       	asr	r21
 5bc:	47 95       	ror	r20
 5be:	8a 95       	dec	r24
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <DIO_READ_PIN+0x86>
 5c2:	ca 01       	movw	r24, r20
 5c4:	89 83       	std	Y+1, r24	; 0x01
 5c6:	59 c0       	rjmp	.+178    	; 0x67a <DIO_READ_PIN+0x146>
		break;
	case DIO_PORTB:
		RET_VAL = READ_BIT(PINB, PIN_NUM);
 5c8:	e6 e3       	ldi	r30, 0x36	; 54
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	80 81       	ld	r24, Z
 5ce:	48 2f       	mov	r20, r24
 5d0:	50 e0       	ldi	r21, 0x00	; 0
 5d2:	8b 81       	ldd	r24, Y+3	; 0x03
 5d4:	28 2f       	mov	r18, r24
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <DIO_READ_PIN+0xae>
 5de:	88 0f       	add	r24, r24
 5e0:	99 1f       	adc	r25, r25
 5e2:	2a 95       	dec	r18
 5e4:	e2 f7       	brpl	.-8      	; 0x5de <DIO_READ_PIN+0xaa>
 5e6:	9a 01       	movw	r18, r20
 5e8:	28 23       	and	r18, r24
 5ea:	39 23       	and	r19, r25
 5ec:	8b 81       	ldd	r24, Y+3	; 0x03
 5ee:	88 2f       	mov	r24, r24
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	a9 01       	movw	r20, r18
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <DIO_READ_PIN+0xc6>
 5f6:	55 95       	asr	r21
 5f8:	47 95       	ror	r20
 5fa:	8a 95       	dec	r24
 5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <DIO_READ_PIN+0xc2>
 5fe:	ca 01       	movw	r24, r20
 600:	89 83       	std	Y+1, r24	; 0x01
 602:	3b c0       	rjmp	.+118    	; 0x67a <DIO_READ_PIN+0x146>
		break;
	case DIO_PORTC:
		RET_VAL = READ_BIT(PINC, PIN_NUM);
 604:	e3 e3       	ldi	r30, 0x33	; 51
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	80 81       	ld	r24, Z
 60a:	48 2f       	mov	r20, r24
 60c:	50 e0       	ldi	r21, 0x00	; 0
 60e:	8b 81       	ldd	r24, Y+3	; 0x03
 610:	28 2f       	mov	r18, r24
 612:	30 e0       	ldi	r19, 0x00	; 0
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	02 c0       	rjmp	.+4      	; 0x61e <DIO_READ_PIN+0xea>
 61a:	88 0f       	add	r24, r24
 61c:	99 1f       	adc	r25, r25
 61e:	2a 95       	dec	r18
 620:	e2 f7       	brpl	.-8      	; 0x61a <DIO_READ_PIN+0xe6>
 622:	9a 01       	movw	r18, r20
 624:	28 23       	and	r18, r24
 626:	39 23       	and	r19, r25
 628:	8b 81       	ldd	r24, Y+3	; 0x03
 62a:	88 2f       	mov	r24, r24
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	a9 01       	movw	r20, r18
 630:	02 c0       	rjmp	.+4      	; 0x636 <DIO_READ_PIN+0x102>
 632:	55 95       	asr	r21
 634:	47 95       	ror	r20
 636:	8a 95       	dec	r24
 638:	e2 f7       	brpl	.-8      	; 0x632 <DIO_READ_PIN+0xfe>
 63a:	ca 01       	movw	r24, r20
 63c:	89 83       	std	Y+1, r24	; 0x01
 63e:	1d c0       	rjmp	.+58     	; 0x67a <DIO_READ_PIN+0x146>
		break;
	case DIO_PORTD:
		RET_VAL = READ_BIT(PIND, PIN_NUM);
 640:	e0 e3       	ldi	r30, 0x30	; 48
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	80 81       	ld	r24, Z
 646:	48 2f       	mov	r20, r24
 648:	50 e0       	ldi	r21, 0x00	; 0
 64a:	8b 81       	ldd	r24, Y+3	; 0x03
 64c:	28 2f       	mov	r18, r24
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	02 c0       	rjmp	.+4      	; 0x65a <DIO_READ_PIN+0x126>
 656:	88 0f       	add	r24, r24
 658:	99 1f       	adc	r25, r25
 65a:	2a 95       	dec	r18
 65c:	e2 f7       	brpl	.-8      	; 0x656 <DIO_READ_PIN+0x122>
 65e:	9a 01       	movw	r18, r20
 660:	28 23       	and	r18, r24
 662:	39 23       	and	r19, r25
 664:	8b 81       	ldd	r24, Y+3	; 0x03
 666:	88 2f       	mov	r24, r24
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	a9 01       	movw	r20, r18
 66c:	02 c0       	rjmp	.+4      	; 0x672 <DIO_READ_PIN+0x13e>
 66e:	55 95       	asr	r21
 670:	47 95       	ror	r20
 672:	8a 95       	dec	r24
 674:	e2 f7       	brpl	.-8      	; 0x66e <DIO_READ_PIN+0x13a>
 676:	ca 01       	movw	r24, r20
 678:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	return RET_VAL;
 67a:	89 81       	ldd	r24, Y+1	; 0x01
}
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	0f 90       	pop	r0
 684:	0f 90       	pop	r0
 686:	cf 91       	pop	r28
 688:	df 91       	pop	r29
 68a:	08 95       	ret

0000068c <main>:
#include "../MCAL/DIO.h"
#include "../LIB/BIT_MATH.h"
#include "../LIB/STD_TYPES.h"
#include <util/delay.h>
void main()
{
 68c:	df 93       	push	r29
 68e:	cf 93       	push	r28
 690:	cd b7       	in	r28, 0x3d	; 61
 692:	de b7       	in	r29, 0x3e	; 62
 694:	ff cf       	rjmp	.-2      	; 0x694 <main+0x8>

00000696 <_exit>:
 696:	f8 94       	cli

00000698 <__stop_program>:
 698:	ff cf       	rjmp	.-2      	; 0x698 <__stop_program>
